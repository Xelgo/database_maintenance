
Функция GetBaseInfoGET(Запрос) Экспорт 
	Ответ = Новый HTTPСервисОтвет(200);
	 Ta = 1;
	СписокБаз = Запрос.ПараметрыЗапроса.Получить("Base"); 
	Если СписокБаз = Неопределено Тогда
		Результат = "Не хватает параметра base. Необходимо передать список нужных баз в этот параметр!"; 
		Ответ.КодСостояния = 400; 
	Иначе  
		МассивБаз = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СписокБаз); 
		
		Соответствие = Новый Соответствие; 
		Для каждого знч из МассивБаз Цикл
			Соответствие.Вставить(знч, Неопределено); 
		КонецЦикла;

		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	ММ_БазаДанных.Ссылка КАК Ссылка,
		|	ММ_БазаДанных.ВерсияДанных КАК ВерсияДанных,
		|	ММ_БазаДанных.ПометкаУдаления КАК ПометкаУдаления,
		|	ММ_БазаДанных.Владелец КАК Владелец,
		|	ММ_БазаДанных.Код КАК Код,
		|	ММ_БазаДанных.Наименование КАК Наименование,
		|	ММ_БазаДанных.ПутьДоФайлаCf КАК ПутьДоФайлаCf,
		|	ММ_БазаДанных.ПутьДоХранилища КАК ПутьДоХранилища,
		|	ММ_БазаДанных.ЛогинХранилище КАК ЛогинХранилище,
		|	ПРЕДСТАВЛЕНИЕ(ММ_БазаДанных.СпособОбновления) КАК СпособОбновления,
		|	ММ_БазаДанных.ТипБазы КАК ТипБазы,
		|	ММ_БазаДанных.ПутьДоФайловойбазы КАК ПутьДоФайловойбазы,
		|	ММ_БазаДанных.ИмяБазы КАК ИмяБазы,
		|	ММ_БазаДанных.Предопределенный КАК Предопределенный,
		|	ММ_БазаДанных.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных,
		|	ММ_БазаДанных.Владелец.ПутьДоКластера КАК ИмяКластера,
		|   ММ_БазаДанных.Владелец.ВебДоступ      КАК СерверRAS,
		|	ММ_БазаДанных.Владелец.Ссылка КАК ВладелецСсылка
		|ИЗ
		|	Справочник.ММ_БазаДанных КАК ММ_БазаДанных
		|ГДЕ
		|	ММ_БазаДанных.Ссылка.ИмяБазы В(&БазыДанных)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ММ_Расширения.Ссылка КАК Ссылка,
		|	ММ_Расширения.ВерсияДанных КАК ВерсияДанных,
		|	ММ_Расширения.ПометкаУдаления КАК ПометкаУдаления,
		|	ММ_Расширения.Владелец КАК Владелец,
		|	ММ_Расширения.Код КАК Код,
		|	ММ_Расширения.Наименование КАК Наименование,
		|	ПРЕДСТАВЛЕНИЕ(ММ_Расширения.СпособОбновления) КАК СпособОбновления,
		|	ММ_Расширения.ПутьДоФайлаCfe КАК ПутьДоФайлаCfe,
		|	ММ_Расширения.ПутьДоХранилища КАК ПутьДоХранилища,
		|	ММ_Расширения.ЛогинХранилище КАК ЛогинХранилище,
		|	ММ_Расширения.ИмяВКонфигураторе КАК Имя,
		|	ММ_Расширения.Предопределенный КАК Предопределенный,
		|	ММ_Расширения.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных
		|ИЗ
		|	Справочник.ММ_Расширения КАК ММ_Расширения
		|ГДЕ
		|	ММ_Расширения.Владелец.ИмяБазы В(&БазыДанных)"); 
		Запрос.УстановитьПараметр("БазыДанных", МассивБаз); 
		ВыпЗап = Запрос.ВыполнитьПакет();
		
		Базы = ВыпЗап[0].Выгрузить();
		Расширения = ВыпЗап[1].Выгрузить();
		
		Массив = Новый Массив; 
		
		ТекущийПользователь = Пользователи.ТекущийПользователь(); 
		
		СтруктураРеквизитовПользователя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТекущийПользователь, "ММ_ЛогинОтБазы,ММ_ЛогинОтКластера");
		ПаролиПользователя = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(ТекущийПользователь, "Пароль, ПарольОтКластера");
		Для каждого База из Базы Цикл  
			
			МассивРасширений = Новый Массив; 
			
			Для каждого Расширение из Расширения Цикл
				
				Если База.Ссылка = Расширение.Владелец Тогда
					СтруктураРасширения = Новый Структура;
					
					СтруктураРасширения.Вставить("Имя");
					СтруктураРасширения.Вставить("ЛогинХранилище"); 
					СтруктураРасширения.Вставить("ПарольХранилище"); 
					СтруктураРасширения.Вставить("ПутьДоХранилища");
					СтруктураРасширения.Вставить("СпособОбновления"); 
					СтруктураРасширения.Вставить("ПутьДоФайлаCfe"); 
					СтруктураРасширения.ПарольХранилище = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(Расширение.Ссылка, "ПарольХранилище");	  
					ЗаполнитьЗначенияСвойств(СтруктураРасширения, Расширение); 
					МассивРасширений.Добавить(СтруктураРасширения); 
					
				КонецЕсли;
				
			КонецЦикла;
			
			КластерБазы = Новый Структура;  
			
			КластерБазы.Вставить("СерверRAS", База.СерверRAS);  
			КластерБазы.Вставить("ПортRAS", "1545");
			КластерБазы.Вставить("ЛогинКластер", СтруктураРеквизитовПользователя.ММ_ЛогинОтКластера);
			КластерБазы.Вставить("ПарольКластер", ПаролиПользователя.ПарольОтКластера);
			КластерБазы.Вставить("ИмяКластера",База.ИмяКластера);
			
			СтруктураБазы = Новый Структура;
			СтруктураБазы.Вставить("ИмяБазы");
			СтруктураБазы.Вставить("ПарольИБ",ПаролиПользователя.Пароль);
			СтруктураБазы.Вставить("ЛогинИБ", СтруктураРеквизитовПользователя.ММ_ЛогинОтБазы);
			СтруктураБазы.Вставить("СпособОбновления"); 
			СтруктураБазы.Вставить("ПутьДоХранилища"); 
			СтруктураБазы.Вставить("ЛогинХранилище"); 
			СтруктураБазы.Вставить("ПарольХранилище",ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(База.Ссылка, "ПарольХранилище"));  
			
			
			СтруктураБазы.Вставить("ПутьДоФайлаCf"); 
			СтруктураБазы.Вставить("ИнформацияОКластере", КластерБазы); 
			СтруктураБазы.Вставить("СписокРасширений", МассивРасширений); 
			
			ЗаполнитьЗначенияСвойств(СтруктураБазы, База); 
			
			
			Соответствие.Вставить(СтруктураБазы.ИмяБазы, СтруктураБазы);                            
			
		КонецЦикла;
	
		Результат = ММ_Коннектор.ОбъектВJson(Соответствие); 
	КонецЕсли;
	Ответ.УстановитьТелоИзСтроки(Результат, КодировкаТекста.UTF8); 
	Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=UTF-8");
	
	Возврат Ответ;  
	
КонецФункции
