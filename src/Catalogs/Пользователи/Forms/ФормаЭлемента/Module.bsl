
&НаКлиенте
Процедура ММ_ПарольПриИзмененииПосле(Элемент)
ПарольИзменен = Истина;	
КонецПроцедуры

&НаСервере
Процедура ММ_ПриЗаписиНаСервереПосле(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	Если ПарольИзменен Тогда
		УстановитьПривилегированныйРежим(Истина);
		ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(ТекущийОбъект.Ссылка, Пароль, "Пароль");
		УстановитьПривилегированныйРежим(Ложь);
		Пароль = ?(ЗначениеЗаполнено(Пароль), УникальныйИдентификатор, "");
		ПарольИзменен = Ложь;    
	КонецЕсли;
	Если ПарольОтКластераИзменен Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(ТекущийОбъект.Ссылка, ПарольОтКластера, "ПарольОтКластера");
		УстановитьПривилегированныйРежим(Ложь);
		ПарольОтКластера = ?(ЗначениеЗаполнено(ПарольОтКластера), УникальныйИдентификатор, "");
		ПарольОтКластераИзменен = Ложь; 
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ММ_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		УстановитьПривилегированныйРежим(Истина);
		Пароли = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(Объект.Ссылка, "Пароль, ПарольОтКластера");
		УстановитьПривилегированныйРежим(Ложь);
		Пароль = ?(ЗначениеЗаполнено(Пароли.Пароль), УникальныйИдентификатор, "");  
		ПарольОтКластера = ?(ЗначениеЗаполнено(Пароли.ПарольОтКластера), УникальныйИдентификатор, "");
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ММ_ПарольОтКластераПриИзмененииПосле(Элемент)
	ПарольОтКластераИзменен = Истина;
КонецПроцедуры
